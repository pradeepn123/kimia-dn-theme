{%- assign default_colors = 'black,silver,gray,whitesmoke,maroon,red,purple,fuchsia,green,lime,olivedrab,yellow,navy,blue,teal,aquamarine,orange,aliceblue,antiquewhite,aqua,azure,beige,bisque,blanchedalmond,blueviolet,brown,burlywood,cadetblue,chartreuse,chocolate,coral,cornflowerblue,cornsilk,crimson,darkblue,darkcyan,darkgoldenrod,darkgray,darkgreen,darkgrey,darkkhaki,darkmagenta,darkolivegreen,darkorange,darkorchid,darkred,darksalmon,darkseagreen,darkslateblue,darkslategray,darkslategrey,darkturquoise,darkviolet,deeppink,deepskyblue,dimgray,dimgrey,dodgerblue,firebrick,floralwhite,forestgreen,gainsboro,ghostwhite,goldenrod,gold,greenyellow,grey,honeydew,hotpink,indianred,indigo,ivory,khaki,lavenderblush,lavender,lawngreen,lemonchiffon,lightblue,lightcoral,lightcyan,lightgoldenrodyellow,lightgray,lightgreen,lightgrey,lightpink,lightsalmon,lightseagreen,lightskyblue,lightslategray,lightslategrey,lightsteelblue,lightyellow,limegreen,linen,mediumaquamarine,mediumblue,mediumorchid,mediumpurple,mediumseagreen,mediumslateblue,mediumspringgreen,mediumturquoise,mediumvioletred,midnightblue,mintcream,mistyrose,moccasin,navajowhite,oldlace,olive,orangered,orchid,palegoldenrod,palegreen,paleturquoise,palevioletred,papayawhip,peachpuff,peru,pink,plum,powderblue,rosybrown,royalblue,saddlebrown,salmon,sandybrown,seagreen,seashell,sienna,skyblue,slateblue,slategray,slategrey,snow,springgreen,steelblue,tan,thistle,tomato,turquoise,violet,wheat,white,yellowgreen,rebeccapurple'
  | split: ','
-%}
{%- assign sorted_filter_values = filter.values | uniq | sort: 'count' | reverse -%}
{%- assign color_swatch_variables = settings.color_swatch_variables | newline_to_br | split: '<br />' -%}
{%- liquid
  assign current_color_scheme = 'default'
  assign target_color_scheme = section.settings.color_scheme

  if section.settings.color_scheme == 'default'
    assign target_color_scheme = settings.default_color_scheme
  endif

  case target_color_scheme
    when 'primary'
      assign current_color_scheme = 'primary'
    when 'secondary'
      assign current_color_scheme = 'secondary'
    when 'custom-1'
      assign current_color_scheme = 'custom_1'
    when 'custom-2'
      assign current_color_scheme = 'custom_2'
    when 'custom-3'
      assign current_color_scheme = 'custom_3'
  endcase

  assign key = current_color_scheme | append: '_background_color'
  assign section_background_color = settings[key] | downcase
-%}

<div class='filters__colors'>
  {%- for value in sorted_filter_values -%}
    {%- liquid
      assign color_downcase = value.label | downcase | strip

      assign is_valid_color = false
      assign is_image = false
      assign is_image_url = false
      assign selected_color_label = color_downcase | capitalize
      assign selected_color_value = color_downcase

      if default_colors contains color_downcase
        assign is_valid_color = true
      endif

      for color_swatch_variable in color_swatch_variables
        assign color_swatch_variable_config = color_swatch_variable | split: '::'
        assign color_swatch_variable_label = color_swatch_variable_config[0]
        assign color_swatch_variable_value = color_swatch_variable_config[1]

        assign color_swatch_variable_label_downcase = color_swatch_variable_label | downcase | strip

        if color_swatch_variable_label_downcase == color_downcase
          assign is_valid_color = true
          assign selected_color_value = color_swatch_variable_value

          if color_swatch_variable_value contains 'http'
            assign is_image_url = true
          elsif color_swatch_variable_value contains '.png' or color_swatch_variable_value contains '.jp'
            assign is_image = true
          endif
        endif
      endfor

      assign hex_color = color_downcase | color_to_hex
    -%}

    <tooltip-trigger
      style='display: block;'
      class='{% if value.count == 0 %}hidden{% endif %}'
      data-float-element-id='ShopColor-{{ forloop.index0 }}'
      data-aria-expanded='false'
    >
      <label
        class='checkbox'
        for='Filter-{{ resolution }}-{{ filter.label | escape }}-{{ forloop.index }}'
        data-filters-checkbox
      >
        <input
          class='checkbox__input filters__input'
          type='checkbox'
          name='{{ value.param_name }}'
          value='{{ value.value }}'
          aria-label='{{ value.value }} color'
          id='Filter-{{ resolution }}-{{ filter.label | escape }}-{{ forloop.index }}'
          {% if value.active %}
            checked
          {% endif %}
          {% if value.count == 0 and value.active == false %}
            disabled
          {% endif %}
        >
        <div class='color-swatch color-swatch--medium color-swatch--circle color-swatch--with-faded-border {% if section_background_color == hex_color %} color-swatch--with-inner-border{% endif %}'>
          <div class='color-swatch__body'>
            {%- if is_valid_color -%}
              <div
                class='color-swatch__body-inner'
                style='--gsc-color-swatch-value: {% if is_image %}url({{ selected_color_value | file_img_url: "120x" }}){% elsif is_image_url %}url({{ selected_color_value }}){% else %}{{ selected_color_value }}{% endif %};'
              ></div>
            {%- else -%}
              {% render 'icon-color-circle-placeholder',
                class: 'color-swatch__body-inner color-swatch__body-inner--placeholder'
              %}
            {%- endif -%}
          </div>
          <float-element
            class='tooltip filters__color-swatch-tooltip'
            aria-hidden='true'
            id='ShopColor-{{ forloop.index0 }}'
            data-placement='bottom'
            data-main-axis-offset='-5'
            data-type='tooltip'
          >
            <template>
              <div class='tooltip__body'>
                <div class='tooltip__arrow' data-float-element-arrow></div>
                {{ selected_color_label }}
                <span class='filters__option-count'>({{ value.count }})</span>
              </div>
            </template>
          </float-element>
        </div>
      </label>
    </tooltip-trigger>
  {%- endfor -%}
</div>

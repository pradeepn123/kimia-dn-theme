{%- liquid
assign options = section.settings
assign section_spacing_top = options.section_spacing_top
assign section_spacing_bottom = options.section_spacing_bottom
-%}

{% capture css %}
{% style %}
.section-{{section.id}}{
--gsc-section-spacing-top: {{ section_spacing_top }}px;
--gsc-section-spacing-bottom: {{ section_spacing_bottom }}px;
}
{% endstyle %}
{% endcapture %}
{% style %}
    {% assign no_of_ingredients_per_page = section.settings.no_of_ingredients_per_page %}   
    @media (max-width: 767px){
        {% assign no_of_ingredients_per_page_mobile = section.settings.no_of_ingredients_per_page_mobile %}
    }
{% endstyle %}

{% render 'inline-css-minifier', css: css %}
{{ 'image-content-rounded.css' | asset_url | stylesheet_tag: preload: true }}
<div class="ingredients-database-section section section-{{ section.id }} section-spacing color-{{ color_scheme }}">
    <div class="ingredients-database__container">
        <div class="ingredients-database-wrapper">
            <div class="ingredients-database">
              {% for block in page.metafields.custom.list.value %}
                {% assign ingredient_heading = block.heading | handle %}
                {% assign page =  pages[ingredient_heading] %}
                {% assign url = block.read_more_url %} 
                {% unless url %}
                    {% assign url = page.url %}
                {% endunless %}
                <div class="ingredients-database-item hidden">
                    {% if block.image != blank %}
                        <a href="{{ url }}"> 
                        <div class="ingredients_image_wrap">
                            <img src="{{ block.image | img_url: 'master' }}" alt="">
                        </div>
                        </a>
                    {% endif %}
                    <div class="ingredients_content_info">
                        <a href="{{ page.url }}">
                            <h4>{{ block.heading }}</h4>
                            <p class="tag_wrap">
                              {{ block.origin.value }}
                            </p>
                        </a>
                    </div>
                </div>
              {% endfor %} 
            </div>
        </div>
        <div class="progress_update load-button-pagination">
            <div class="load_more_button_update load-button-pagination__count"></div>
            <div class='load-button-pagination__progress'></div>
        </div>
        
        <div class="btn btn--outline load-button-pagination__btn pagination_load_btn">
            <span>Load more</span>
        </div>
    </div>
  <!-- </div> -->
</div>

<script>
    var no_of_ingredients_per_page = {{ no_of_ingredients_per_page | json }}
    var no_of_ingredients_per_page_mobile = {{ no_of_ingredients_per_page_mobile | json }}

    var ingredient_block = Array.from(document.querySelectorAll('.ingredients-database-item'));
    if(window.screen.width > 768){
        ingredient_block.slice(0,no_of_ingredients_per_page).forEach(el => el.classList.remove('hidden'));
        var viewed = no_of_ingredients_per_page
        updateRemaingingCount(no_of_ingredients_per_page);
    }else{
        ingredient_block.slice(0,no_of_ingredients_per_page_mobile).forEach(el => el.classList.remove('hidden'));
        var viewed = no_of_ingredients_per_page_mobile
        updateRemaingingCount(no_of_ingredients_per_page_mobile);
    }
    
    document.querySelector('.pagination_load_btn').addEventListener('click', () => {
        var ingredient_block_hidden = Array.from(document.querySelectorAll('.ingredients-database-item.hidden'));
        if(window.screen.width > 768){
            ingredient_block_hidden.slice(0,no_of_ingredients_per_page).forEach(el => el.classList.remove('hidden'));
            if(ingredient_block_hidden.length - (no_of_ingredients_per_page + 1) <= 0){
                document.querySelector('.pagination_load_btn').style.display = 'none';
                document.querySelector('.load_more_button_update').style.display = 'none';
                document.querySelector('.load-button-pagination__progress').style.display = 'none';
            }
            if(ingredient_block_hidden.length - no_of_ingredients_per_page != 0){
                viewed += no_of_ingredients_per_page;
                updateRemaingingCount(viewed)
            }
        }else{
            ingredient_block_hidden.slice(0,no_of_ingredients_per_page_mobile).forEach(el => el.classList.remove('hidden'));
            if(ingredient_block_hidden.length - (no_of_ingredients_per_page_mobile + 1) <= 0){
                document.querySelector('.pagination_load_btn').style.display = 'none';
                document.querySelector('.load_more_button_update').style.display = 'none';
                document.querySelector('.load-button-pagination__progress').style.display = 'none';
            }
            if(ingredient_block_hidden.length - no_of_ingredients_per_page_mobile != 0){
                viewed += no_of_ingredients_per_page;
                updateRemaingingCount(viewed)
            }
        }
    })
    function updateRemaingingCount(viewed){
        var percentprogress = (viewed / ingredient_block.length * 100);
        document.querySelector('.load_more_button_update').innerHTML = `You've viewed ${viewed} of  ${ingredient_block.length} results`;
        document.querySelector('.load-button-pagination__progress').style.setProperty('--gsc-pagination-progress', percentprogress + '%');
    }
</script>
{% schema %}
{
    "name": "Image content Rounded",
    "tag": "section",
    "settings": [
        {
            "type": "header",
            "content": "t:sections.image_banner.image_settings_header"
        },
        {
            "type": "range",
            "id": "section_spacing_top",
            "min": 0,
            "max": 100,
            "step": 1,
            "default": 0,
            "unit": "t:sections.general_section_settings.section_spacing_top.unit",
            "label": "t:sections.general_section_settings.section_spacing_top.label"
        },
        {
            "type": "range",
            "id": "section_spacing_bottom",
            "min": 0,
            "max": 100,
            "step": 1,
            "default": 0,
            "unit": "t:sections.general_section_settings.section_spacing_bottom.unit",
            "label": "t:sections.general_section_settings.section_spacing_bottom.label"
        },
        {
            "type": "range",
            "id": "no_of_ingredients_per_page",
            "min": 1,
            "max": 20,
            "default": 4,
            "step": 1,
            "label": "Number of ingredients per page"
        },
        {
            "type": "range",
            "id": "no_of_ingredients_per_page_mobile",
            "min": 1,
            "max": 20,
            "default": 4,
            "step": 1,
            "label": "Number of ingredients per page on mobile"
        }
    ],
    "presets": [
        {
            "name": "Image content Rounded"
        }
    ]
}
{% endschema %}